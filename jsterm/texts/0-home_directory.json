{
    "name": "~",
    "type": "dir",
    "visible": true,
    "permission": true,
    "contents": [{
        "name": "README",
        "type": "text",
        "description": "Acerca de CLIteratura.",
        "description_en": "About CLIterature.",
        "contents": "╔═╗╦  ╦┌┬┐┌─┐┬─┐┌─┐┌┬┐┬ ┬┬─┐┌─┐<br />║  ║  ║ │ ├┤ ├┬┘├─┤ │ │ │├┬┘├─┤<br />╚═╝╩═╝╩ ┴ └─┘┴└─┴ ┴ ┴ └─┘┴└─┴ ┴<br /><br />Aprende el uso básico de la interfaz de línea de comandos (<i>Command-line interface</i>) con obras literarias.<br /><br />CLIteratura es un pequeño proyecto que intenta acercar al uso de interfaces de línea de comandos a personas que tienen ninguna o poca relación con el ámbito informático.<br /><br />Mediante el contacto con algo más conocido, como son los textos literarios, especialmente el cuento o la novela, se busca habituar al usuario general con la sintaxis y el uso de la terminal.<br /><br />El objetivo de esto no es que los usuarios abandonen las interfaces gráficas y empiecen a ser <i>hacker-ninjas</i>, sino algo más elemental: que nos familiaricemos con las herramientas que ya forman parte de nuestro día a día; a saber, las tecnologías de la información.<br /><br />Desmitificando el ámbito informático como algo solo accesible para unos cuantos es como CLIteratura desea contribuir a que el usuario/leyente por lo menos reflexione sobre su rol de consumidor de <i>hardware</i> y de <i>software</i>. Con esto se pretende fomentar un proceso de empoderamiento ante algunas de las herramientas más importantes y menos comprendidas de la actualidad.<br /><br />---<br /><br />El núcleo de este proyecto es <a href=\"https://github.com/clarkduvall/jsterm\" target=\"_blank\">jsterm</a>, ¡gracias por compartir el código!<br /><br />Todos los archivos de CLIteratura están disponibles <a href=\"https://github.com/NikaZhenya/CLIteratura\" target=\"_blank\">aquí (haz clic)</a>.",
        "contents_en": "╔═╗╦  ╦┌┬┐┌─┐┬─┐┌─┐┌┬┐┬ ┬┬─┐┌─┐<br />║  ║  ║ │ ├┤ ├┬┘├─┤ │ │ │├┬┘├┤<br />╚═╝╩═╝╩ ┴ └─┘┴└─┴ ┴ ┴ └─┘┴└─└─┘<br /><br />Learn the basics of the command-line interface with literature.<br /><br />CLIterature is a small project that aims to give a basic introduction to the command-line interface to the people who have little or no relationship with the tech field.<br /><br />By the contact with something more common, like literature writings, mainly stories or novels, is how it seeks to teach the sintaxis and use of the terminal.<br /><br />The objective of this is not so that users leave the graphical interfaces and begin to be hacker-ninjas, but something more elementary: that we familiarize ourselves with the tools that are already a part of our day to day; namely, information technology.<br /><br />Debunking the tech field as something only accessible for a few people is how CLIterature wants to contribute to the user / reader to at least reflect on their consumer role of hardware and software. This is intended to promote a process of empowerment to some of the most important and least understood tools today.<br /><br />---<br /><br />The kernel of this project is <a href=\"https://github.com/clarkduvall/jsterm\" target=\"_blank\">jsterm</a>, thanks for sharing the code!<br /><br />All the files of CLIterature are available <a href=\"https://github.com/NikaZhenya/CLIteratura\" target=\"_blank\">here (click)</a>."
    },{
        "name": "CLI.txt",
        "type": "text",
        "description": "¿Qué es la interfaz de línea de comandos?",
        "description_en": "What is the command-line interface?",
        "contents": "<b>¿Qué es la CLI?</b><br /><br />\bLa interfaz de línea de comandos (CLI por su acrónimo en inglés) posibilita dar instrucciones a un programa por medio de texto. Antes de que existieran las interfaces gráficas, como el uso de ventanas, los usuarios solamente utilizaban un teclado y un monitor para usar las computadoras, lo que se conocía como «terminal» o «consola».<br /><br />Históricamente la «terminal» era este dispositivo físico y la «consola», un tipo específico de terminal que se utilizaba para comunicarse con el sistema operativo en el nivel más bajo posible, es decir, sin la necesidad de una configuración previa para poder utilizar la computadora.<br /><br />En la actualidad la terminal y la consola pasaron a ser un programa, un <i>software</i>, que se ejecuta en cualquier sistema operativo como Linux, Mac OS o Windows. Es por esto que cuando hablamos de «terminal» o «consola» de manera puntual hacemos referencia a emuladores, ¡porque dejaron de ser dispositivos físicos!<br /><br />Al ser emuladores que se comunican directamente con el sistema operativo, precisan de una interfaz que interprete las órdenes del usuario. Esto se conoce como «<i>shell</i>», un tipo de interfaz de usuario. Mediante este <i>software</i> es como se hace posible acceder a los servicios del sistema operativo. Ejemplos de «<i>shell</i>» son cmd.exe o PowerShell para Windows, o bash para Linux y Mac OS.<br /><br />Cabe resaltar que un «<i>shell</i>» no necesariamente necesita ser una CLI, sino que también se puede dar en forma de interfaz gráfica. Un buen ejemplo de esto son los entornos de escritorio de cualquier sistema operativo. Lo relevante aquí es que un «<i>shell</i>» mediante una terminal es más veloz que uno gráfico, ya que utiliza menos recursos del sistema.<br /><br />Lo que ahora estás viendo es un simulador de una terminal que está ejecutando bash, por mucho uno de los intérpretes de órdenes más populares, el cual utiliza una interfaz de línea de comandos para acceder a los servicios del sistema operativo. Al ser un simulador, <b>no debes de preocuparte por que le pase algo a tu dispositivo</b>, todo queda acotado en esta pestaña de tu explorador…<br /><br />¿Confundido por tanta terminología? ¡No te preocupes!, incluso en el ámbito de las tecnologías de la información los términos «CLI», «terminal», «consola», «<i>shell</i>» y «bash» tienden a usarse como sinónimos. Solo vale la pena recordar que «estrictamente» no lo son…<br /><br />---<br /><br />Fuentes:<br /><br />-<a href=\"https://es.wikipedia.org/wiki/Bash\" target=\"_blank\">https://es.wikipedia.org/wiki/Bash</a><br /><br />-<a href=\"https://es.wikipedia.org/wiki/Interfaz_de_l%C3%ADnea_de_comandos\" target=\"_blank\">https://es.wikipedia.org/wiki/Interfaz_de_l%C3%ADnea_de_comandos</a><br /><br />-<a href=\"https://es.wikipedia.org/wiki/Shell_(inform%C3%A1tica)\" target=\"_blank\">https://es.wikipedia.org/wiki/Shell_(inform%C3%A1tica)</a><br /><br />-<a href=\"https://goo.gl/22Pe4V\" target=\"_blank\">https://goo.gl/22Pe4V</a><br /><br />",
        "contents_en": "<b>What is the CLI?</b><br /><br />The command-line interface (CLI) enables to use software through typing. Before the graphic interfaces, such as the use of windows, the users only utilized a keyboard and a monitor in order to use the computers, also known as “terminal” or “console”.<br /><br />Historically, the “terminal” was a physical device and the “console”, an specific type of terminal designed to communicate with the operating system (OS) at the lowest level; i.e. without the need of a previous configuration to be able to use the computer.<br /><br />In nowadays the terminal and the console became a software that any OS, such as Linux, Mac OS or Windows, can execute. That is why, when we talk about the “terminal” or the “console”, specifically we make a reference to an emulator, because these things aren't physical devices anymore!<br /><br />Because they are emulators that stablishes direct connections with the OS, they need an interface that executes the user orders. This is known as “shell”, a type of user interface. Through this software is possible to access to the OS services. Examples of “shells” are cmd.exe or PowerShell for Windows, or bash for Linux and Mac OS.<br /><br />It should be noted that a “shell” isn't necessarily a CLI, it could also be a graphic interface. A good example is any desktop enviroment of any OS. What is relevant here is that a “shell” on the terminal is faster than a graphic interface, since it uses less resources of the OS.<br /><br />What you are seeing now is a simulator of a terminal that is executing bash, by far one of the most popular command processors, which use a CLI to access to the OS services. Because it is a simulator, <b>you don't have to worry about what could happen to your device</b>, everything is limited to this tab of your browser…<br /><br />Confused by so much terminology? Don't worry!, even in the information technology (IT) the terms “CLI”, “terminal”, “console”, “shell” and “bash” tend to be used as synonyms. Just remember that in a strictly sense they aren't…<br /><br />---<br /><br />Sources:<br /><br />-<a href=\"https://en.wikipedia.org/wiki/Bash_(Unix_shell)\" target=\"_blank\">https://en.wikipedia.org/wiki/Bash_(Unix_shell)</a><br /><br />-<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\" target=\"_blank\">https://en.wikipedia.org/wiki/Command-line_interface</a><br /><br />-<a href=\"https://en.wikipedia.org/wiki/Shell_(computing)\" target=\"_blank\">https://en.wikipedia.org/wiki/Shell_(computing)</a><br /><br />-<a href=\"https://goo.gl/22Pe4V\" target=\"_blank\">https://goo.gl/22Pe4V</a><br /><br />"
    },{
        "name": "jsterm",
        "type": "exec",
        "description": "Conoce el núcleo de CLIteratura.",
        "description_en": "Know the kernel of CLIterature.",
        "contents": "https://github.com/clarkduvall/jsterm"
    },{
        "name": "tux.png",
        "type": "img",
        "description": "Tux es la mascota oficial del kernel Linux.",
        "description_en": "Tux is the official mascot of the Linux kernel.",
        "contents": "/img/penguin.png"
    }]
}
